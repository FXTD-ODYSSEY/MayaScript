[tool.poetry]
authors = ["timmyliang <timmyliang@tencent.com>"]
description = ""
name = "CodeBase"
version = "0.1.0"

[tool.poetry.dependencies]
python = "^3.8"

[tool.poetry.dev-dependencies]

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version = "0.16.0"
version_files = [
  "pyproject.toml:version",
  "src/photoshop/__version__.py",
]

[tool.black]
exclude = '''
(
  /(
      /.eggs         # exclude a few common directories in the
    | /.git          # root of the project
    | /.hg
    | /.mypy_cache
    | /.tox
    | /.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''
include = '/.pyi?$'
line-length = 88
target_version = ['py37']

[tool.isort]
add_imports = [
  "from __future__ import absolute_import",
  "from __future__ import division",
  "from __future__ import print_function",
]
multi_line_output = 3
atomic = true
filter_files = true
float_to_top = true
include_trailing_comma = true
known_first_party = "src"
lines_after_imports = 2
lines_between_types = 1
profile = "black"
src_paths = ["pyuiw", "tests"]
use_parentheses = true
# Enforce import section headers.
force_single_line = true
force_sort_within_sections = true
import_heading_firstparty = "Import local modules"
import_heading_future = "Import future modules"
import_heading_stdlib = "Import built-in modules"
import_heading_thirdparty = "Import third-party modules"
# All project unrelated unknown imports belong to third-party.
default_section = "THIRDPARTY"
skip_glob = "*/docs/conf.py"

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = python2.7,echo
isolated_build = true
skipsdist = true

[testenv]
deps = pytest >= 3.0.0, <4
commands = pytest


[testenv:cln]
deps = pre-commit
commands = pre-commit run --files {posargs:DEFAULTS}

[testenv:lint]
deps = 
    flakehell
    wemake-python-styleguide
commands = flakehell lint {posargs:DEFAULTS}

[testenv:deploy]
deps = poetry
commands = python scripts/deploy.py
"""


[tool.flake8]
max-returns = 2
max-arguments = 4
# Base flake8 configuration:
# https://flake8.pycqa.org/en/latest/user/configuration.html
format = "wemake"
show-source = true
statistics = false
doctests = true

# Plugins:
max-complexity = 6
max-line-length = 80

# darglint configuration:
# https://github.com/terrencepreilly/darglint
strictness = "long"
# docstring-style = "google"

# Self settings:
max-imports = 17
inline-quotes = '"'
# # Excluding some directories:
# exclude = 
#   .git
#   __pycache__
#   .venv
#   .eggs
#   *.egg
#   dist


[tool.flakehell]
doctests = true
enable_extensions = "G"
format = "colored"
show_source = true
statistics = false

accept_encodings = "utf-8"
max_complexity = 6
max_line_length = 80

# baseline = ".flakehell_baseline"
ignore = "D100, D104, D401, W504, RST303, RST304, DAR103, DAR203"

[tool.flakehell.plugins]
"flake8-*" = ["+*"]
mccabe = ["+*"]
nitpick = ["+*"]
"pep8-naming" = ["+*"]
pycodestyle = ["+*"]
pyflakes = ["+*"]
"wemake-python-styleguide" = ["+*"]

[tool.mypy]
allow_redefinition = false
check_untyped_defs = true
ignore_errors = false
ignore_missing_imports = true
implicit_reexport = false
local_partial_types = true
strict_optional = true
strict_equality = true
no_implicit_optional = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unreachable = true
warn_no_return = true